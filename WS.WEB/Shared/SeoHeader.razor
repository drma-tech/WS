<PageTitle>
    @GetTitle()
</PageTitle>
<HeadContent>
    @if (Index)
    {
        <meta name="robots" content="index" />
    }
    else
    {
        <meta name="robots" content="noindex, nofollow" />
    }
    @if (Url.NotEmpty())
    {
        <meta property="og:url" content="@GetCanonicalUrl()" />
    }
    <meta property="og:site_name" content="@ProjectName" />
    <meta property="og:title" content="@GetTitle()" />
    <meta property="og:image" content="@Icon" />
    <meta property="twitter:title" content="@GetTitle()" />
    <meta property="twitter:site" content="@ProjectName" />
    <meta property="twitter:image" content="@Icon" />
    @if (!string.IsNullOrEmpty(Description))
    {
        <meta name="description" content="@GetDescription()" />
        <meta property="og:description" content="@GetDescription()" />
        <meta property="twitter:description" content="@GetDescription()" />
    }
    <meta name="keywords" Content="@GetKeywords()" />

    @if (Url.NotEmpty())
    {
        <link rel="canonical" href="@GetCanonicalUrl()" />
    }    
    <link rel="icon" type="image/png" href="favicon.ico" />
</HeadContent>

@code {
    private const string ProjectName = "WebStandards";
    private const string ProjectUrl = "https://www.web-standards.com";

    [Parameter] public string? Title { get; set; }
    [Parameter] public string? Description { get; set; }
    [Parameter] public string? Url { get; set; }
    [Parameter] public string? Icon { get; set; } = $"{ProjectUrl}/icon/icon-192.png";
    [Parameter] public IEnumerable<string> Keywords { get; set; } = [];
    [Parameter] public bool Index { get; set; } = true;

    string GetTitle()
    {
        return Title is null ? ProjectName : $"{ProjectName} | {Title}";
    }

    string GetDescription()
    {
        if (string.IsNullOrEmpty(Description))
            return "";
        return Description.TrimEnd('.') + ".";
    }

    string GetKeywords()
    {
        var keywords = new List<string>();

        keywords.AddRange(Keywords);

        keywords.Add(ProjectName);

        return string.Join(", ", keywords);
    }

    string GetCanonicalUrl()
    {
        return ProjectUrl + Url;
    }

}